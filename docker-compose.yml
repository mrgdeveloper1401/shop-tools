services:
  app:
    container_name: django
    build:
      context: .
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file: ".env"
    entrypoint: ["/home/app/scripts/start.sh"]
    restart: always
    volumes:
      - static_files:/home/app/staticfiles
    depends_on:
      - db
      - nginx

  db:
    container_name: gs_db
    volumes:
      - gs_postgres_data:/var/lib/postgresql/data
    image: docker.arvancloud.ir/postgres:16.9-alpine
    expose:
      - 5432
    restart: always
    environment:
      POSTGRES_PASSWORD: ${COMPOSE_POSTGRES_PASSWORD}

  redis:
    container_name: gs_redis
    image: docker.arvancloud.ir/redis:7.4-alpine
    restart: always
    expose:
      - 6379

  nginx:
    container_name: gs_nginx
    restart: always
    volumes:
      - static_files:/vol/
    command: ["nginx", "-g", "daemon off;"]
    build:
      context: nginx
    ports:
      - "80:80"
      - "443:443"

  celery:
    container_name: gs_celery
    restart: always
    build:
      context: .
    env_file: ".env"
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    entrypoint: "celery -A core.utils.dj_celery worker -l INFO"
    depends_on:
      - app

  flower:
    container_name: gs_flower
    expose:
      - 5555
    ports:
      - "5555:5555"
    restart: always
    build:
      context: .
    env_file: ".env"
    depends_on:
      - celery
    entrypoint: "celery -A core.utils.dj_celery flower --port=5555"
volumes:
  gs_postgres_data:
  static_files:
